---

- name: set threescale facts
  set_fact:
    backend_name: "{{ app_name }}-backend"
    api_product_name: "{{ app_name }}"
    developer_user: "{{ app_name }}-developer-user"
    developer_account: "{{ app_name }}-developer-account"
   # developer_account_application : "{{ developer_account }}-application"

- name: "delete developer secret {{ developer_account }}-secret"
  k8s:
    state: absent
    name: "{{ developer_account }}-secret"
    namespace: "{{ apimanager_namespace }}"
    kind: Secret

- name: "delete developer account {{ developer_account }}"
  k8s:
    state: absent
    kind: DeveloperAccount
    api_version: capabilities.3scale.net/v1beta1
    name: "{{ developer_account }}"
    namespace: "{{ apimanager_namespace }}"

- name: "delete developer user {{ developer_user }}"
  k8s:
    state: absent
    name: "{{ developer_user }}"
    namespace: "{{ apimanager_namespace }}"
    kind: DeveloperUser
    api_version: capabilities.3scale.net/v1beta1

# - name: "delete developer account application {{ developer_account_application }}"
#   k8s:
#     state: absent
#     name: "{{ developer_account_application }}"
#     namespace: "{{ apimanager_namespace }}"
#     kind: Application

#TODO 
# remove application via REST API
#remove active docs

- name: "delete product {{ api_product_name }}"
  k8s:
    state: absent
    name: "{{ api_product_name }}"
    namespace: "{{ apimanager_namespace }}"
    kind: Product
    api_version: capabilities.3scale.net/v1beta1


- name: "Delete backend {{ backend_name }}"
  k8s:
    state: absent
    name: "{{ backend_name }}"
    namespace: "{{ apimanager_namespace }}"
    kind: Backend
    api_version: capabilities.3scale.net/v1beta1


- name: "delete tenant {{ tenant_name }}"
  k8s:
    state: absent
    name: "{{ tenant_name }}"
    namespace: "{{ apimanager_namespace }}"
    kind: Tenant
    api_version: capabilities.3scale.net/v1alpha1
  when: undeploy_api_tenant is defined and undeploy_api_tenant == "true"


- name: "delete tenant secret {{ tenant_name }}-admin-passwd-secret"
  k8s:
    state: absent
    name: "{{ tenant_name }}-admin-passwd-secret"
    namespace: "{{ apimanager_namespace }}"
    kind: Secret
  when: undeploy_api_tenant is defined and undeploy_api_tenant == "true"

- name: "delete tenant secret {{ tenant_name }}-generated-secret"
  k8s:
    state: absent
    name: "{{ tenant_name }}-generated-secret"
    namespace: "{{ apimanager_namespace }}"
    kind: Secret
  when: undeploy_api_tenant is defined and undeploy_api_tenant == "true"

- name: "delete tenant secret {{ tenant_access_token_secret }}"
  k8s:
    state: absent
    name: "{{ tenant_access_token_secret }}"
    namespace: "{{ apimanager_namespace }}"
    kind: Secret
  when: undeploy_api_tenant is defined and undeploy_api_tenant == "true"
